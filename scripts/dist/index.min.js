/* Copyright 2020 PingCAP, Inc. Licensed under MIT. */
!function(){"use strict"
const t={"en-US":{t:"Script failed to run. Please ensure it is running on the Grafana v6.x.x dashboard page.",
s:"Going to export snapshot of the current dashboard: ",i:"Note: Only metrics from visible panels can be exported",
o:"Number of panels",l:"Loading panels",h:"Expand all rows",p:"Export",u:"Export immediately",cancel:"Cancel"},"zh-TW":{
t:"執行失敗。請確保是在 Grafana v6.x.x 的儀表板上執行劇本。",s:"即將匯出當前儀表板：",i:"注意：只能匯出已展開的面板內的資料",o:"面板數量",l:"載入面板中",h:"展開所有面板",p:"匯出",
u:"立即匯出",cancel:"取消"},"zh-CN":{t:"执行失败。请确保是在 Grafana v6.x.x 的监控网页上执行脚本。",s:"将导出当前的监控页面：",i:"注意：只有已展开面板内的监控会被导出",
o:"面板数量",l:"加载面板中",h:"展开所有面板",p:"导出",u:"立刻导出",cancel:"取消"}}[function(){const t=navigator.language
return/^zh-/.test(t)?/\b(TW|HK|MO|Hant)\b/.test(t)?"zh-TW":"zh-CN":"en-US"}()]
var e;(t=>{t[t.idle=0]="idle",t[t.started=1]="started",t[t.shortcut=2]="shortcut"})(e||(e={}))
try{
const s=angular.element,i=document.styleSheets[0],n=[".__dexport_hint{z-index:2222;position:fixed;background:#fff;color:#000;padding:1em;font-size:18px;border-left:3px solid #faad14;right:0;top:5em;opacity:.8;min-width:30em}",".__dexport_hint:hover{opacity:1}",".__dexport_hint button{margin:0 1em}",".__dexport_hint progress{margin-right:1em;vertical-align:middle;width:18em}"]
class o{constructor(){const o=s(document).injector()
this.m=o.get("timeSrv")
const a=this.m.dashboard
n.forEach(t=>i.insertRule(t,0)),this.g=s("<span>"),this.v=s('<progress value="0">'),
this._=s('<button style="font-weight:bold">').text(t.p).one("click",()=>this.P()),
this.S=s("<button>").text(t.h).on("click",()=>a.expandRows())
const r=/^(Mac|iP)/.test(navigator.platform)?"flex-direction:row-reverse":"justify-content:center"
this.$=s('<div class="__dexport_hint">').append(s("<p>").text(t.s).append(s("<strong>").text(a.title)),s("<p>").text(t.i).append(this.S),s('<p style="font-size:.8em">').append(this.v,this.g),s(`<p style="display:flex;${r}">`).append(this._,s("<button>").text(t.cancel).on("click",()=>this.T()))),
this.I=e.idle,s(document.body).append(this.$),this.O=setInterval(()=>this.N(),500)}N(){
const i=s(".panel-loading"),n=i.length
if(this.I===e.idle)this.g.text(`${t.o}: ${n}`),this._.prop("disabled",0===n)
else{const s=i.filter(".ng-hide").length,o=(100*s/n||0).toFixed(1)
this.g.text(`${t.l}: ${o}% (${s}/${n})`),this.v.prop({value:s,max:n}),n>s?this.I!==e.shortcut&&(this.I=e.shortcut,
this._.prop("disabled",!1).text(t.u).one(()=>this.U())):this.U()}}P(){const t=this.m.dashboard
this.I=e.started,this._.prop("disabled",!0),this.k=t.refresh,this.m.setAutoRefresh(),t.snapshot={timestamp:new Date},
t.startRefresh()}U(){const t=this.m.dashboard,e=t.snapshot.timestamp.toISOString(),i=t.getSaveModelClone()
i.time=this.m.timeRange()
const n={meta:{isSnapshot:!0,type:"snapshot",expires:"9999-12-31T23:59:59Z",created:e},dashboard:i}
this.T()
const o=new Blob([JSON.stringify(n)],{type:"application/json"}),a=URL.createObjectURL(o),r=s("<a>")
r.prop({href:a,download:`${i.title}_${e}.json`}),s(document.body).append(r),r[0].click(),setTimeout(()=>{
URL.revokeObjectURL(a),r.remove()},0)}T(){const t=this.m.dashboard
delete t.snapshot,t.forEachPanel(t=>delete t.snapshotData),t.annotations.list.forEach(t=>delete t.snapshotData),
this.k&&this.m.setAutoRefresh(this.k),clearInterval(this.O),this.$.remove(),n.forEach(()=>i.deleteRule(0))}}new o
}catch(e){console.error(e),alert(t.t)}}()
